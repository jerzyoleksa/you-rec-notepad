{"version":3,"sources":["components/Nav.js","components/NoteCard.js","components/List.js","components/Note.js","helpers/urlFor.js","components/Current.js","components/Opener.js","components/Flash.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","selectNote","note","props","choseNote","handleSignMessage","publicAddress","nonce","web3","Promise","resolve","reject","eth","personal","sign","utils","fromUtf8","err","signature","updateTitle2","event","noteToUpdate","this","prop1","console","log","target","value","authKee","axios","put","then","res","catch","bind","updateTitle","useSignature","obj","obj2","menuTab","option","a","updateMeniu","toggleLightMode","state","isDark","document","body","style","backgroundColor","color","setState","export","url","method","responseType","response","window","URL","createObjectURL","Blob","data","link","createElement","href","setAttribute","appendChild","click","connectMetamask","ethereum","request","accounts1","Web3","result","key","address","updateKee","getNotes","alert","aes256","require","plaintext","encryptedPlainText","Buffer","from","encrypt","decrypt","post","list","lastNote","length","notesX","found","find","element","status","toggleNote","showNote","className","onClick","class","title","innerRef","contentEditable","html","disabled","onChange","tagName","saviStatus","Component","NoteCard","tags","map","tag","index","name","getNote","deleteNote","content","renderTags","id","urlFor","endpoint","Current","updateNote","updateSaviStatus","handleChange2","evt","handleLineFocus","typing","typingTimeout","handleChange","React","createRef","updateNoteContent","clearTimeout","setTimeout","nextProps","nameInput","focus","ref","input","Opener","listItems","Flash","resetError","error","App","updateKey","authKey","selectedNote","updateNoteTxt","text","updateSavStatus","savingStatus","updateMenu","current","opener","drukara","get","performSubmissionRequest","patch","submitNote","errors","newNotesState","notes","filter","delete","showTagForm","newTag","closeTagForm","submitTag","noteId","deleteTag","theChosenNote","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e2589fd4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\n\r\nclass Nav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notesX: [],\r\n      key: '',\r\n      isDark : false\r\n    };\r\n\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.getNotes(); //this sets notesX in state\r\n  }\r\n\r\n  selectNote = (note) => {\r\n    this.props.choseNote(note);\r\n  }\r\n\r\n  handleSignMessage = ( publicAddress, nonce, web3 ) => {\r\n    return new Promise((resolve, reject) =>\r\n      web3.eth.personal.sign(\r\n        web3.utils.fromUtf8(`I am signing my one-time nonce: ${nonce}`),\r\n        publicAddress,\r\n        (err, signature) => {\r\n          if (err) return reject(err);\r\n          return resolve({ publicAddress, signature });\r\n        }\r\n      )\r\n    );\r\n  };\r\n  \r\n  updateTitle2 = function(event){\r\n    let noteToUpdate = this.props.prop1;\r\n    console.log(\"inside updateTitle:\"+event.target.value);\r\n    noteToUpdate[\"title\"] = event.target.value;\r\n    noteToUpdate[\"value\"] = event.target.value;\r\n    noteToUpdate[\"authKey\"] = this.props.authKee;\r\n    noteToUpdate[\"name\"] = \"title\"; \r\n    \r\n\r\n    axios.put('https://frengly.com/ai/notes', noteToUpdate)\r\n    .then((res) => {\r\n    })\r\n    .catch((err) => console.log(\"Error updating!!!\",err) );\r\n  }.bind(this);\r\n\r\n\r\n\r\n\r\n  updateTitle = event => {\r\n    let noteToUpdate = this.props.prop1;\r\n    console.log(\"inside updateTitle:\"+event.target.value);\r\n    noteToUpdate[\"title\"] = event.target.value;\r\n    noteToUpdate[\"value\"] = event.target.value;\r\n    noteToUpdate[\"authKey\"] = this.props.authKee;\r\n    noteToUpdate[\"name\"] = \"title\"; \r\n    \r\n\r\n    axios.put('https://frengly.com/ai/notes', noteToUpdate)\r\n    .then((res) => {\r\n    })\r\n    .catch((err) => console.log(\"Error updating!!!\",err) );\r\n  }\r\n\r\n  useSignature = (obj, obj2) => {\r\n    console.log(obj);\r\n  }\r\n\r\n  menuTab = async(option) => {\r\n    console.log('menuTab:'+option);\r\n    this.props.updateMeniu(option);\r\n  }\r\n\r\n  toggleLightMode = () => {\r\n    console.log('changing lights');\r\n    //document.body.classList.add('light-mode-dark');\r\n    //document.querySelector('.nav-container').classList.add('light-mode-dark');\r\n    //document.querySelector('.App').classList.add('light-mode-dark');\r\n\r\n    \r\n\r\n    if (this.state.isDark) {\r\n      document.body.style.backgroundColor = \"#ecf0f1\";\r\n      document.body.style.color = \"black\";\r\n      \r\n    }\r\n    else {\r\n      document.body.style.backgroundColor = \"rgb(51,51,51)\";\r\n      document.body.style.color = \"white\";\r\n      \r\n    }\r\n\r\n   \r\n    this.setState({isDark: !this.state.isDark})\r\n  }\r\n\r\n  export = async() => {\r\n    console.log('exporting shiit...');\r\n\r\n    \r\n    \r\n    /*\r\n    axios.get('https://frengly.com/ai/export?id=2', {responseType: 'blob'})\r\n    .then((res) => {\r\n      \r\n    })\r\n    .catch((err) => console.log(\"Error!!!\",err) );\r\n    */\r\n\r\n    axios({\r\n      url: 'https://frengly.com/ai/export?id=2', //your url\r\n      method: 'GET',\r\n      responseType: 'blob', // important\r\n    }).then((response) => {\r\n       const url = window.URL.createObjectURL(new Blob([response.data]));\r\n       const link = document.createElement('a');\r\n       link.href = url;\r\n       link.setAttribute('download', 'package.zip'); //or any other extension\r\n       document.body.appendChild(link);\r\n       link.click();\r\n    });\r\n\r\n  }\r\n\r\n  /*\r\n  axios({\r\n    url: 'http://api.dev/file-download', //your url\r\n    method: 'GET',\r\n    responseType: 'blob', // important\r\n  }).then((response) => {\r\n     const url = window.URL.createObjectURL(new Blob([response.data]));\r\n     const link = document.createElement('a');\r\n     link.href = url;\r\n     link.setAttribute('download', 'file.pdf'); //or any other extension\r\n     document.body.appendChild(link);\r\n     link.click();\r\n  });*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  connectMetamask = async() => {\r\n    console.log('connecting metamask1:'+this.props);\r\n    // async () => {\r\n    //   console.log('connecting metamask2');\r\n    //   if (window.ethereum) {\r\n    //     try {\r\n    //       await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          \r\n    //       let web3 = new Web3(window.ethereum)\r\n          \r\n    //       const accounts =  await web3.eth.getAccounts()\r\n        \r\n\r\n    //     } catch (err) {\r\n    //       console.log('user did not add account...', err)\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // Check if Web3 has been injected by the browser (Mist/MetaMask)\r\n    if (window.ethereum) {\r\n      \r\n            try {\r\n              const accounts1 = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n              console.log('accounts::'+accounts1[0]);\r\n\r\n              let web3 = new Web3(window.ethereum);    \r\n              \r\n              var message = \"Some string 2\"\r\n              //var hash = web3.utils.sha3(message)\r\n              // web3.personal.sign(hash, account, function(error, signature) {\r\n              //     console.log('signature:'+signature);\r\n              // });\r\n              \r\n              let promise = this.handleSignMessage(accounts1[0], message, web3);\r\n              \r\n              promise.then(function(result) {\r\n                console.log(result.signature); // \"Promise resolved successfully\"\r\n                this.setState({key: result.signature});\r\n                this.setState({address: accounts1[0]});\r\n                this.props.updateKee(result.signature);\r\n                \r\n                \r\n                this.getNotes();\r\n\r\n              }.bind(this), err => {\r\n                console.log(err); // Error: \"Promise rejected\"\r\n             });\r\n\r\n              //this.props.authKee = signature;\r\n\r\n            } catch (err) {\r\n                    console.log('user did not add account...', err)\r\n            }\r\n\r\n    } else {\r\n        alert(\"No Ethereum interface injected into browser. Read-only access\");\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getNotes = () => {\r\n\r\n    \r\n    var aes256 = require('aes256');\r\n\r\n    var key = 'my passphrase';\r\n    var plaintext = 'my plaintext message';\r\n    var buffer = Buffer.from(plaintext);\r\n\r\n    var encryptedPlainText = aes256.encrypt(key, plaintext);\r\n    var decryptedPlainText = aes256.decrypt(key, encryptedPlainText);\r\n    console.log(encryptedPlainText);\r\n    // plaintext === decryptedPlainText\r\n\r\n\r\n\r\n\r\n\r\n    //use https not http! to avoid problems with redirect/cors\r\n    axios.post('https://frengly.com/ai/notesSec', {'authKey': this.state.key})\r\n    .then((res) => {\r\n      let list = res.data;\r\n      let lastNote = list[list.length-1];\r\n      console.log(\"lastNote::\"+lastNote);\r\n      this.setState({notesX: list});\r\n\r\n      //jerzy 1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! REFACTOR !!!!!!!!!!!!!!!!!!!!!!!!!!\r\n      const found = list.find(element => element.status == 1);\r\n      if (list.length > 0) this.selectNote(found);\r\n    \r\n    })\r\n    .catch((err) => console.log(\"Error!!!\",err) );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { toggleNote, showNote } = this.props;\r\n    //const listItems = this.state.notesX.map((note) => <div key={note.id} onClick={() => this.selectNote(note)} className=\"circleo\">{note.id}</div>);\r\n    \r\n    return (\r\n      <div className=\"nav-container\">\r\n        <div className=\"nav-list\" onClick={() => {this.menuTab('current');toggleNote()}} ><span class=\"material-icons-outlined\">create</span></div> \r\n        {this.state.key.length > 0 && <div className=\"nav-list\" onClick={() => this.menuTab('opener')} ><span class=\"material-icons-outlined\">folder</span></div>}\r\n       \r\n        \r\n        \r\n        <div className=\"nav-list\" onClick={() => this.toggleLightMode()}><span class=\"material-icons-outlined\">wb_sunny</span></div> \r\n        <div className=\"nav-list\" onClick={() => this.connectMetamask()}><span class=\"material-icons-outlined\">account_circle</span></div> \r\n        \r\n        <div className=\"nav-list\" onClick={() => this.export()}><span class=\"material-icons-outlined\">save_alt</span></div> \r\n        \r\n        {this.state.address && <div className=\"nav-list\"><span className={this.state.isDark ? 'btn btn-grayish' : 'btn'}>{this.state.address}</span></div>}\r\n        \r\n        {this.props.prop1.title && <div className=\"nav-list\">\r\n          \r\n         \r\n           <ContentEditable\r\n              innerRef={this.contentEditable}\r\n              html={this.props.prop1.title} // innerHTML of the editable div\r\n              disabled={false}       // use true to disable editing\r\n              onChange={this.updateTitle}\r\n              tagName='article' // Use a custom HTML tag (uses a div by default)\r\n              className={this.state.isDark ? 'btn btn-grayish' : 'btn'}\r\n            />\r\n        </div>}\r\n\r\n        {this.props.saviStatus && <div className=\"nav-list\"><span className={this.state.isDark ? 'btn btn-grayish' : 'btn'}>{this.props.saviStatus}</span></div>}\r\n\r\n        {/* <div className=\"nav-list\">{String(this.state.isDark)}</div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nclass NoteCard extends Component {\r\n  renderTags(note) {\r\n    return note.tags.map((tag, index) => \r\n      <span className=\"note-card-tag\" key={index}>\r\n        {tag.name}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { note, getNote, deleteNote } = this.props;\r\n    return(\r\n      <div className=\"note-card-container\">\r\n        <div className=\"note-card-title\">\r\n          {note.title}\r\n        </div>\r\n        <div className=\"note-card-content\">\r\n          {note.content}\r\n        </div>\r\n        <div className=\"note-card-tags\">\r\n          {this.renderTags(note)}\r\n        </div>\r\n        <span className=\"note-card-delete\" onClick={() => deleteNote(note.id)}>\r\n          <i className=\"material-icons\">close</i>\r\n        </span>\r\n        <span className=\"note-card-edit\" onClick={() => getNote(note.id)}>\r\n          <i className=\"material-icons\">mode_edit</i>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteCard;","import React, { Component } from 'react';\r\nimport NoteCard from './NoteCard';\r\n\r\nclass List extends Component {\r\n  componentWillMount() {\r\n    this.props.getNotess();\r\n  }\r\n\r\n  render() {\r\n    const { notes2, getNote, deleteNote } = this.props;\r\n\r\n    const cards = notes2.map((note, index) => {\r\n      return (\r\n        <NoteCard\r\n          key={index}\r\n          index={index}\r\n          note={note}\r\n          getNote={getNote}\r\n          deleteNote={deleteNote}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"list-container\">\r\n        {cards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\n\r\nclass Note extends Component {\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = {\r\n      title: this.title.value,\r\n      content: this.content.value\r\n    };\r\n    this.props.submitNote(formData, this.props.note.id);\r\n  }\r\n\r\n  onTagSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = {\r\n      name: this.name.value\r\n    }\r\n    this.props.submitTag(formData, this.props.note.id)\r\n    this.props.closeTagForm();\r\n  }\r\n  \r\n  renderTagForm(note) {\r\n    if ( note.id !== undefined) {\r\n      if(!this.props.newTag) {\r\n        return (\r\n          <span>\r\n            Tag your note:\r\n            <i \r\n              className=\"tag-button material-icons\"\r\n              onClick={() => this.props.showTagForm()}\r\n            >\r\n              add circle\r\n            </i>\r\n          </span>\r\n        );\r\n      } else {\r\n        return (\r\n          <form onSubmit={(e) => this.onTagSubmit(e)}>\r\n            <input\r\n              className=\"tag-input\"\r\n              type=\"text\"\r\n              placeholder=\"Tag Name...\"\r\n              ref={(input) => this.name = input}\r\n            />\r\n          </form>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  renderTags (note) {\r\n    if (note.tags) {\r\n      return note.tags.map((tag, index) =>\r\n        <div\r\n          className=\"tag\"\r\n          key={index}\r\n          onClick={(e) => this.props.deleteTag(note.id, tag.id)}\r\n        >\r\n          <span className=\"delete\">\r\n            <i className=\"material-icons\">delete</i>\r\n          </span>\r\n          {tag.name}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { note, closeTagForm } = this.props;\r\n    return(\r\n      <div className=\"note-container\">\r\n        <h2>Edit This Note</h2>\r\n        <form\r\n          className=\"note-form\"\r\n          onSubmit={(e) => this.onSubmit(e)}\r\n          onClick={() => closeTagForm()}\r\n        >\r\n          <div className=\"note-title\">\r\n            <input\r\n              className=\"note-title-input\"\r\n              type=\"text\"\r\n              placeholder=\"Note Title...\"\r\n              defaultValue={note.title}\r\n              ref={(input) => this.title = input}\r\n            />\r\n          </div>\r\n          <div className=\"note-textarea-container\">\r\n            <textarea\r\n              className=\"note-textarea\"\r\n              placeholder=\"Type Here...\"\r\n              defaultValue={note.content}\r\n              ref={(input) => this.content = input}\r\n            />\r\n          </div>\r\n          <input className=\"note-button\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        <div className=\"tag-container\">\r\n          <div className=\"tag-button-container\">\r\n            {this.renderTagForm(note)}\r\n          </div>\r\n          <div className=\"tag-list-container\">\r\n            {this.renderTags(note)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;","const urlFor = (endpoint) => {\r\n return `https://notes-rails-api.herokuapp.com/${endpoint}`;\r\n};\r\n\r\nexport default urlFor;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport urlFor from '../helpers/urlFor';\r\nimport NoteCard from './NoteCard';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\n\r\nclass Current extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n      value: this.props.prop1.content,\r\n      typing: false,\r\n      typingTimeout: 0,\r\n      html: \"<b>Hello <i>World</i></b>\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    //for content editable\r\n    this.contentEditable = React.createRef();\r\n    \r\n  }\r\n\r\n\r\n  updateNote = () => {\r\n    \r\n    this.props.updateSaviStatus(\"saving ...\"); //in async methods must be setState, not just this.state.status = ...\r\n    let noteToUpdate = this.props.prop1;\r\n    console.log('updating:'+noteToUpdate);\r\n    console.log('key from parent:'+this.props.authKee);\r\n    \r\n    noteToUpdate[\"authKey\"] = this.props.authKee;\r\n\r\n    noteToUpdate[\"name\"] = \"content\"; \r\n    noteToUpdate[\"value\"] = noteToUpdate[\"content\"];\r\n\r\n    axios.put('https://frengly.com/ai/notes', noteToUpdate)\r\n    .then((res) => {\r\n      this.props.updateSaviStatus(\"\");\r\n    })\r\n    .catch((err) => console.log(\"Error updating!!!\",err) );\r\n  }\r\n\r\n  //TODO: call parent method to update prent state of selectedNote\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n    this.props.updateNoteContent(event.target.value);\r\n\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n    \r\n    this.state.typing = false;\r\n    this.state.typingTimeout = setTimeout(() => {\r\n      this.updateNote();  \r\n    }, 1500);\r\n\r\n\r\n  }\r\n\r\n  handleChange2 = evt => {\r\n    console.log('handleChange2');\r\n    this.setState({html: evt.target.value});\r\n  };\r\n\r\n  handleLineFocus = evt => {\r\n    console.log('focus');\r\n  };\r\n\r\n  //update state of Current based on prop1 that holds selectedNote in parent\r\n  componentWillReceiveProps(nextProps) {\r\n    // This will erase any local state updates!\r\n    // Do not do this.\r\n    this.setState({ value: nextProps.prop1.content });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.nameInput.focus();\r\n  }\r\n\r\n\r\n  render() {\r\n  \r\n  \r\n\r\n    return (\r\n  \r\n      <div className=\"note-textarea-container\">\r\n\r\n      {/*<ContentEditable\r\n              innerRef={this.contentEditable}\r\n              html={this.state.html} // innerHTML of the editable div\r\n              disabled={false}       // use true to disable editing\r\n              onChange={this.handleChange2} // handle innerHTML change\r\n              onMouseDown={e => this.handleLineFocus(e)}\r\n              onKeyUp={e => this.handleLineFocus(e)}\r\n              tagName='article' // Use a custom HTML tag (uses a div by default)\r\n              className='contentEditablo'\r\n            />*/}\r\n\r\n        {/*<span>{this.state.status}</span>*/}\r\n        <textarea value={this.state.value} onChange={this.handleChange} ref={(input) => { this.nameInput = input; }} />\r\n        \r\n\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Current;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport urlFor from '../helpers/urlFor';\r\nimport NoteCard from './NoteCard';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\n\r\nclass Opener extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: '',\r\n      notesX: [],\r\n      status: \"\",\r\n      value: this.props.prop1.content,\r\n      typing: false,\r\n      typingTimeout: 0,\r\n      html: \"<b>Hello <i>World</i></b>\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    //for content editable\r\n    this.contentEditable = React.createRef();\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log('OPENER - component will mount !!!! ');\r\n    //let noteFromProps = this.props.chosenNote;\r\n    //this.selectNote(noteFromProps);\r\n    this.getNotes(); //this sets notesX in state\r\n  }\r\n\r\n  getNotes = () => {\r\n    //use https not http! to avoid problems with redirect/cors\r\n    axios.post('https://frengly.com/ai/notesSec', {'authKey': this.props.authKee})\r\n    .then((res) => {\r\n      let list = res.data;\r\n      let lastNote = list[list.length-1];\r\n      console.log(\"lastNote::\"+lastNote);\r\n      this.setState({notesX: list});\r\n    \r\n    })\r\n    .catch((err) => console.log(\"Error!!!\",err) );\r\n  }\r\n\r\n  updateNote = () => {\r\n    \r\n    this.setState({ status: \"saving ...\" }); //in async methods must be setState, not just this.state.status = ...\r\n    let noteToUpdate = this.props.prop1;\r\n    console.log('updating:'+noteToUpdate);\r\n    console.log('key from parent:'+this.props.authKee);\r\n    \r\n    noteToUpdate[\"authKey\"] = this.props.authKee;\r\n    axios.put('https://frengly.com/ai/notes', noteToUpdate)\r\n    .then((res) => {\r\n      this.setState({ status: \"\" });\r\n    })\r\n    .catch((err) => console.log(\"Error updating!!!\",err) );\r\n  }\r\n\r\n  //TODO: call parent method to update prent state of selectedNote\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n    this.props.updateNoteContent(event.target.value);\r\n\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n    \r\n    this.state.typing = false;\r\n    this.state.typingTimeout = setTimeout(() => {\r\n      this.updateNote();  \r\n    }, 1500);\r\n\r\n\r\n  }\r\n\r\n  selectNote = (note) => {\r\n    this.props.choseNote(note);\r\n    this.props.updateMeniu('current');\r\n  }\r\n\r\n  handleChange2 = evt => {\r\n    console.log('handleChange2');\r\n    this.setState({html: evt.target.value});\r\n  };\r\n\r\n  handleLineFocus = evt => {\r\n    console.log('focus');\r\n  };\r\n\r\n  //update state of Current based on prop1 that holds selectedNote in parent\r\n  componentWillReceiveProps(nextProps) {\r\n    // This will erase any local state updates!\r\n    // Do not do this.\r\n    this.setState({ value: nextProps.prop1.content });\r\n  }\r\n\r\n  componentDidMount(){\r\n \r\n  }\r\n\r\n\r\n  render() {\r\n  \r\n    const listItems = this.state.notesX.map((note) => <div key={note.id} onClick={() => this.selectNote(note)}>\\__ {note.title}.txt</div>);\r\n    \r\n\r\n    return (\r\n     \r\n      <div className=\"note-textarea-container\">\r\n\r\n      {/*<ContentEditable\r\n              innerRef={this.contentEditable}\r\n              html={this.state.html} // innerHTML of the editable div\r\n              disabled={false}       // use true to disable editing\r\n              onChange={this.handleChange2} // handle innerHTML change\r\n              onMouseDown={e => this.handleLineFocus(e)}\r\n              onKeyUp={e => this.handleLineFocus(e)}\r\n              tagName='article' // Use a custom HTML tag (uses a div by default)\r\n              className='contentEditablo'\r\n            />*/}\r\n     \r\n        <div className=\"nav-list\">{listItems}</div>\r\n        \r\n\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Opener;","import React, { Component } from 'react';\r\n\r\nclass Flash extends Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.resetError();\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <div className=\"flash-container\">\r\n        {error} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Flash;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav';\r\nimport List from './components/List';\r\nimport Note from './components/Note';\r\nimport Current from './components/Current';\r\nimport Opener from './components/Opener';\r\nimport axios from 'axios';\r\nimport urlFor from './helpers/urlFor';\r\nimport Flash from './components/Flash';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showNote: false,\r\n      notesX: [],\r\n      note: {},\r\n      newTag: false,\r\n      error: '',\r\n      selectedNote : {\"content\" : \"Hello from Mars\", \"id\" : -1},\r\n      authKey: '',\r\n      current: true,\r\n      opener: false,\r\n      savingStatus: 'waitin'\r\n    };\r\n  }\r\n\r\n  toggleNote = () => {\r\n    this.setState({\r\n      showNote: ! this.state.showNote,\r\n      note: {}\r\n    })\r\n  }\r\n\r\n  //method that lets you update state from child to parent, its passed to Nav as parameter\r\n  updateKey = (key) => {console.log('updating key in parent!..');this.setState({ authKey: key });}\r\n  updateNote = (note) => {console.log('updating note in parent!..');this.setState({ selectedNote: note });}\r\n  updateNoteTxt = (text) => {console.log('updating note content!..'+text); this.state.selectedNote.content = text;}\r\n  updateSavStatus = (text) => {console.log('updating savingStatys!..'+text); this.setState({ savingStatus: text });}\r\n  updateMenu = (text) => { \r\n    \r\n    if (text == 'opener') this.setState({ current: false, opener: true }); \r\n    if (text == 'current') this.setState({ current: true, opener: false }); \r\n  \r\n  }\r\n\r\n  drukara = () => {\r\n    console.log('printing paper...');\r\n  }\r\n\r\n  getNotes = () => {\r\n    axios.get(urlFor('notes'))\r\n    .then((res) => this.setState({notesX: res.data}) )\r\n    .catch((err) => console.log(err.response.data) );\r\n  }\r\n\r\n  getNote = (id) => {\r\n    axios.get(urlFor(`notes/${id}`))\r\n    .then((res) => this.setState({note: res.data, showNote: true }) )\r\n    .catch((err) => console.log(err.response.data) );\r\n  }\r\n\r\n  performSubmissionRequest = (data, id) => {\r\n    if (id) {\r\n      return axios.patch(urlFor(`notes/${id}`), data);\r\n    } else {\r\n      return axios.post(urlFor('notes'), data);\r\n    }\r\n  }\r\n\r\n  submitNote = (data, id) => {\r\n    this.performSubmissionRequest(data, id)\r\n    .then((res) => this.setState({ showNote: false }) )\r\n    .catch((err) => {\r\n      const { errors } = err.response.data;\r\n      if (errors.content) {\r\n        this.setState({ error: \"Missing Note Content!\" });\r\n      } else if (errors.title) {\r\n        this.setState({ error: \"Missing Note Title!\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteNote = (id) => {\r\n    const newNotesState = this.state.notes.filter((note) => note.id !== id );\r\n    axios.delete(urlFor(`notes/${id}`) )\r\n    .then((res) => this.setState({ notes: newNotesState }) )\r\n    .catch((err) => console.log(err.response.data) );\r\n  }\r\n\r\n  showTagForm = () => {\r\n    this.setState({ newTag: true });\r\n  }\r\n\r\n  closeTagForm = () => {\r\n    this.setState({ newTag: false });\r\n  }\r\n  \r\n  submitTag = (data, noteId) => {\r\n    axios.post(urlFor(`notes/${noteId}/tags`), data)\r\n    .then((res) => this.getNote(noteId) )\r\n    .catch((err) => {\r\n      const { errors } = err.response.data;\r\n      if (errors.name) {\r\n        this.setState({ error: \"Missing Tag Name!\" })\r\n      } else if (errors.title) {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteTag = (noteId, id) => {\r\n    axios.delete(urlFor(`/tags/${id}`))\r\n    .then((res) => this.getNote(noteId) )\r\n    .catch((err) => console.log(err.response.body))\r\n  }\r\n\r\n  resetError = () => {\r\n    this.setState({ error: '' });\r\n  }\r\n\r\n  render() {\r\n    const { showNote, notesX, note, newTag, error, current, opener, savingStatus } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <Nav saviStatus={this.state.savingStatus} updateMeniu={this.updateMenu} toggleNote={this.toggleNote} showNote={showNote} choseNote={this.updateNote} updateKee={this.updateKey} prop1={this.state.selectedNote}/>\r\n        {error && <Flash error={error} resetError={this.resetError} />}\r\n        {current && <Current updateSaviStatus={this.updateSavStatus} updateNoteContent={this.updateNoteTxt} prop1={this.state.selectedNote} name=\"Jurek\" theChosenNote={this.selectedNote} authKee={this.state.authKey}/>}  \r\n        {opener && <Opener updateMeniu={this.updateMenu} updateNoteContent={this.updateNoteTxt} prop1={this.state.selectedNote} name=\"Jurek\" theChosenNote={this.selectedNote} authKee={this.state.authKey} choseNote={this.updateNote}/>}\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}